name: kafka-consume-bug

networks:
   default:
      name: "consume-bug-network"

volumes:
   zookeeper_data:
      driver: local
   kafka_data:
      driver: local

services:
   zookeeper:
      image: docker.io/bitnami/zookeeper:latest
      # volumes:
      #    - "zookeeper_data:/bitnami"
      deploy:
         resources:
            limits:
               memory: 200M
      environment:
         - ALLOW_ANONYMOUS_LOGIN=yes

   kafka:
      image: docker.io/bitnami/kafka:latest
      # volumes:
      #    - "kafka_data:/bitnami"
      environment:
         - BITNAMI_DEBUG=no
         - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
         - ALLOW_PLAINTEXT_LISTENER=yes
         - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
         - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
         - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
         - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
         - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
         - KAFKA_ENABLE_KRAFT=no
      depends_on:
         - zookeeper

   create-topic-and-write-messages:
      container_name: create-topic-and-write-messages
      build:
         dockerfile: CreateTopicAndWriteMessages/Dockerfile
      depends_on:
         - kafka

   consume-messages:
      container_name: consume-messages
      build:
         dockerfile: ConsumeMessages/Dockerfile
      depends_on:
         create-topic-and-write-messages:
            condition: service_completed_successfully